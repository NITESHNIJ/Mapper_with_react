{"version":3,"sources":["logo.svg","components/WelcomeComponent.js","components/LoadingComponent.js","components/HeaderComponent.js","components/SignupComponent.js","components/LoginComponent.js","components/ErrorComponent.js","components/ForgotPasswordComponent.js","components/ResetPasswordComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Welcome","id","className","style","height","width","position","to","Component","Loading","Signup","props","state","hidden","handleSignup","bind","event","this","setState","errmsg","axios","post","base_url","username","value","password","then","response","history","push","err","data","message","catch","error","preventDefault","onSubmit","htmlFor","required","type","name","innerRef","input","color","Login","signup_status","handleLogin","match","params","signed","localStorage","setItem","token","ErrorHandle","ForgotPassword","handleForgot","ResetPassword","key","handleSubmit","Main","getItem","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.34576241.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Jumbotron, Button, Container, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Welcome extends Component{\r\n    render(){\r\n        return(\r\n            <div id=\"welcome\">\r\n                <div className=\"welcome_jumbo\" style={{ height: '90vh', width: '90%', position: 'relative'}}>\r\n                    <div className=\"content\">\r\n                        <h1><b>Welcome</b></h1>\r\n                        <h3>Please Register if you are a new user else Signin</h3>\r\n                        <Link to=\"/signup\"><b>Login/Signup</b></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                    \r\n        );\r\n    }\r\n};\r\n//style=\"width: 100%; height: 100vh; position: relative;\"\r\nexport default Welcome;","import React from 'react';\r\n\r\n//fa-spinner creates the logo of a spinner,  fa-pulse rotates the spinner, fa-3x makes the speed of rotation to 3 times\r\n// fa-fw makes the rotation on forward direction , text-primary makes the spinner of blue color.\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Working on it . . .</p>\r\n        </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\n\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n\r\n  toggleNav(){\r\n    this.setState({\r\n      isNavOpen : !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n          <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { Col, Button, Form, FormGroup, Input, Label, FormText } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Signup extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          hidden: true\r\n        };\r\n        this.handleSignup = this.handleSignup.bind(this);\r\n    }\r\n\r\n    handleSignup(event) {\r\n        this.setState({\r\n          hidden: false,\r\n          errmsg: \"\"\r\n        });\r\n\r\n        const base_url = 'https://leveltracker.azurewebsites.net';\r\n        axios.post(base_url+'/users/signup',{\r\n          username: this.username.value,\r\n          password: this.password.value\r\n        })\r\n        .then( response => {\r\n            this.setState({\r\n              hidden: true\r\n            });\r\n            this.props.history.push('/login/true')\r\n        }, (err) => {\r\n          this.setState({\r\n            hidden: true,\r\n            errmsg: err.response.data.message\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.props.history.push('/error')\r\n        });\r\n          \r\n        //alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <Container id=\"signup_form\">\r\n            <h1>Signup with us...</h1>\r\n            <Container id=\"signup_form_input\">\r\n              <div  hidden={(this.state.hidden) ? \"hidden\" : ''}>\r\n                <Loading />\r\n              </div>\r\n              <div>\r\n                <h2>{this.state.errmsg}</h2>\r\n              </div>\r\n              <Form onSubmit={this.handleSignup}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Email</Label>\r\n                  <Input required type=\"email\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input required type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Signup</Button>\r\n              </Form>\r\n              Please <Link to=\"/login/notried\"><b>Login</b></Link> if you are an existing user...\r\n            </Container>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, {Component} from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { Col, Button, Form, FormGroup, Input, Label, FormText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Login extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          hidden: true,\r\n          signup_status: \"\",\r\n          errmsg: \"\"\r\n        };\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        if(props.match.params.signed == 'true'){\r\n          this.state.signup_status = \"You have succesfully signed up!\"\r\n        }\r\n\r\n        //alert(props.match.params.signed);\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.setState({\r\n          hidden: false\r\n        });\r\n\r\n        const base_url = 'https://leveltracker.azurewebsites.net';\r\n        axios.post(base_url+'/users/login',{\r\n          username: this.username.value,\r\n          password: this.password.value\r\n        })\r\n        .then( response => {\r\n          //console.log(response);\r\n          this.setState({\r\n            hidden: true\r\n          });\r\n          localStorage.setItem('token', response.data.token);\r\n          this.props.history.push('/dashboard')\r\n        }, \r\n        error => {\r\n          this.setState({\r\n            hidden: true,\r\n            errmsg: error.response.data.message\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.props.history.push('/error')\r\n        });\r\n\r\n        //alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <Container id=\"signup_form\">\r\n            <h1>Login...</h1>\r\n            <Container id=\"signup_form_input\">\r\n              <div  hidden={(this.state.hidden) ? \"hidden\" : ''}>\r\n                <Loading />\r\n              </div>\r\n              <div>\r\n                <h3>{this.state.signup_status}</h3>\r\n              </div>\r\n              <div>\r\n                <h3>{this.state.errmsg}</h3>\r\n              </div>\r\n              <Form onSubmit={this.handleLogin}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"username\">Email</Label>\r\n                    <Input required type=\"email\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <Input required type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}  />\r\n                  </FormGroup>\r\n                  <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                </Form>\r\n                <p>Please <Link to=\"/signup\"><b>Signup</b></Link> if you are a new user...</p>\r\n                <p><Link to=\"/forgot_password\"><b>Forgot Password?</b></Link>, don't worry we will help you!</p>\r\n            </Container>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\n\r\nclass ErrorHandle extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Server Error</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorHandle;","import React, { Component } from 'react';\r\nimport { Loading } from './LoadingComponent'\r\nimport { Container } from 'reactstrap';\r\nimport { Col, Button, Form, FormGroup, Input, Label, FormText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nclass ForgotPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            hidden: true,\r\n            errmsg: \"\"\r\n        };\r\n        this.handleForgot = this.handleForgot.bind(this);\r\n    }\r\n\r\n    handleForgot(event){\r\n        this.setState({\r\n            hidden: false\r\n        });\r\n        //alert(this.username.value);\r\n\r\n        const base_url = 'https://leveltracker.azurewebsites.net';\r\n        axios.post(base_url+'/forgotpassword',{\r\n          username: this.username.value\r\n        })\r\n        .then( response => {\r\n          this.setState({\r\n            hidden: true,\r\n            errmsg: response.data.message\r\n          });\r\n        }, \r\n        error => {\r\n          this.setState({\r\n            hidden: true,\r\n            errmsg: error.response.data.message\r\n          });\r\n        })\r\n        .catch(error => {\r\n            this.props.history.push('/error')\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <Container id=\"forgot_password\">\r\n            <h1>Enter your registered Mail ID...</h1>\r\n            <Container id=\"signup_form_input\">\r\n              <div  hidden={(this.state.hidden) ? \"hidden\" : ''}>\r\n                <Loading />\r\n              </div>\r\n              <div>\r\n                <h2>{this.state.errmsg}</h2>\r\n              </div>\r\n              <Form onSubmit={this.handleForgot}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Email</Label>\r\n                  <Input required type=\"email\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Reset Password</Button>\r\n              </Form>\r\n            </Container>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import React, {Component} from 'react';\r\nimport { Loading } from './LoadingComponent'\r\nimport { Container } from 'reactstrap';\r\nimport { Col, Button, Form, FormGroup, Input, Label, FormText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nclass ResetPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hidden: true,\r\n            errmsg: \"\",\r\n            key: props.match.params.key\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        this.setState({\r\n            hidden: false\r\n        });\r\n        // alert(this.username.value);\r\n\r\n        const base_url = 'https://leveltracker.azurewebsites.net';\r\n        axios.post(base_url+'/resetpassword',{\r\n          username: this.username.value,\r\n          password: this.password.value,\r\n          key: this.state.key\r\n        })\r\n        .then( response => {\r\n          this.setState({\r\n            hidden: true,\r\n            errmsg: response.data.message\r\n          });\r\n        }, \r\n        error => {\r\n          this.setState({\r\n            hidden: true,\r\n            errmsg: error.response.data.message\r\n          });\r\n        })\r\n        .catch(error => {\r\n            this.props.history.push('/error')\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <Container id=\"forgot_password\">\r\n            <h1>Reset Password</h1>\r\n            <Container id=\"signup_form_input\">\r\n              <div  hidden={(this.state.hidden) ? \"hidden\" : ''}>\r\n                <Loading />\r\n              </div>\r\n              <div>\r\n                <h2>{this.state.errmsg}</h2>\r\n              </div>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Email</Label>\r\n                  <Input required type=\"email\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">New Password</Label>\r\n                  <Input required type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Save Password</Button>\r\n              </Form>\r\n            </Container>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Welcome from './WelcomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Signup from './SignupComponent';\r\nimport Login from './LoginComponent';\r\nimport ErrorHandle from './ErrorComponent';\r\nimport ForgotPassword from './ForgotPasswordComponent';\r\nimport ResetPassword from './ResetPasswordComponent';\r\n\r\nclass Main extends Component{\r\n\r\n    render(){\r\n        \r\n        if(localStorage.getItem('token')){\r\n            return(\r\n                <div className=\"App\">\r\n                    <div>Add a lot more here!</div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n\r\n            return(\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route path=\"/welcome\" component={Welcome} />\r\n                        <Route path=\"/login/:signed\" component={Login} />\r\n                        <Route path=\"/signup\" component={Signup} />\r\n                        <Route path=\"/error\" component={ErrorHandle} />\r\n                        <Route path=\"/forgot_password\" component={ForgotPassword} />\r\n                        <Route path=\"/reset_password/:key\" component={ResetPassword} />\r\n                        <Redirect to=\"/welcome\" />\r\n                    </Switch>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\n\nclass App extends Component {\n  render(){\n    return(\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}